name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:  
  lint:  
    runs-on: ubuntu-latest  
    steps:  
      - name: извлечение кода  
        uses: actions/checkout@v2 

      - name: установка питона
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'  

      - name: установка зависимостей
        run: |
          python -m pip install --upgrade pip  
          pip install flake8  

      - name: запуск линтера 
        run: flake8 . 


  test:  
    runs-on: ubuntu-latest  
    needs: lint  
    steps: 
      - name: извлечение кода
        uses: actions/checkout@v2

      - name: установка питона
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'  

      - name: установка зависимостей для тестов
        run: |
          python -m pip install --upgrade pip  
          pip install coverage  # Установка библиотеки для измерения покрытия

      - name: запуск юнит тестов
        run: |
          coverage run -m unittest discover -s . -p '*_test.py' 

      - name: измерение покрытия тестами
        run: coverage report  

  security:  
    runs-on: ubuntu-latest  
    needs: test  
    steps:  
      - name: извлечение кода
        uses: actions/checkout@v2

      - name: установка питона
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'  

      - name: установка зависимостей для проверки безопасности
        run: |
          python -m pip install --upgrade pip  
          pip install bandit  

      - name: запуск проверки безопасности кода
        run: bandit -r .  

  notify:
    runs-on: ubuntu-latest  
    needs: [lint, test, security]  
    if: always() 
    steps:  
      - name: отправка уведомления тг
        run: |
          if [ "${{ needs.lint.result }}" == "success" ] && [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.security.result }}" == "success" ]; then
            MESSAGE="Пайплайн ${{ github.workflow }} завершен успешно!"  
          else
            MESSAGE="Пайплайн ${{ github.workflow }} завершен с ошибкой!"  
          fi
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN}}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \ 
          -d text="$MESSAGE"  
